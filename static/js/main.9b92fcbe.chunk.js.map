{"version":3,"sources":["components/SearchBox.js","components/WeatherBox.js","components/AdditionalInfo.js","components/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","props","change","value","click","className","type","placeholder","onChange","onClick","WeatherBox","weatherDesc","location","country","date","currentTemp","maxTemp","minTemp","AdditionalInfo","realFeel","wind","humidity","pressure","sunrise","sunset","icon","faThermometerQuarter","faWind","faTint","faTachometerAlt","faSun","faMoon","data","App","state","weather_description","getUnixTime","time","converted","Date","hours","getHours","minutes","getMinutes","startFunction","fetch","then","res","json","result","setState","name","sys","weather","description","Math","round","main","temp","feels_like","temp_min","temp_max","speed","catch","error","console","log","getWeather","handleChange","e","target","dateBuilder","d","day","getDay","getDate","month","getMonth","year","getFullYear","setClass","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b92fcbe.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SearchBox.css';\r\n\r\nconst SearchBox = (props) => {\r\n    const {change, value, click} = props;\r\n    return (\r\n        <div className=\"search-box\">\r\n            <input \r\n            className=\"search-bar\"\r\n            type=\"text\"\r\n            placeholder=\"Wyszukaj miasto...\"\r\n            onChange={change}\r\n            value={value}\r\n            />\r\n            <button onClick={click}>Szukaj</button>\r\n         </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\nimport './WeatherBox.css';\r\n\r\nconst WeatherBox = (props) => {\r\n    const {weatherDesc, location, country, date, currentTemp, maxTemp, minTemp} = props;\r\n    return (\r\n    <div className=\"weather-box\">\r\n            <div className=\"status\">\r\n           {weatherDesc}\r\n            </div>\r\n          <div className=\"location\">{location}, {country}</div>\r\n          <div className=\"date\">{date}</div>\r\n          <div className=\"temp\">\r\n            <div className=\"current\">\r\n              {currentTemp}°\r\n            </div>\r\n            <div className=\"min-max\">\r\n              <div className=\"max\">\r\n                {maxTemp}°C\r\n              </div>\r\n              <div className=\"min\">\r\n                {minTemp}°C\r\n              </div>\r\n            </div>\r\n          </div> \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default WeatherBox","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {faThermometerQuarter, faWind, faTint, faSun, faMoon, faTachometerAlt} from \"@fortawesome/free-solid-svg-icons\";\r\nimport './AdditionalInfo.css';\r\n\r\nconst AdditionalInfo = (props) => {\r\n    const {realFeel, wind, humidity, pressure, sunrise, sunset} = props;\r\n    return (\r\n    <div className=\"additional-info\">\r\n          <div className=\"intro\">\r\n            <p>Szczegóły</p>\r\n            <div className=\"line\"></div>\r\n          </div>\r\n          <div className=\"blocks\">\r\n            <div className=\"info\">\r\n              <FontAwesomeIcon className=\"icon\" icon={faThermometerQuarter}></FontAwesomeIcon>\r\n              <p className=\"stat\">Odczuwalna</p>\r\n              <span>{realFeel}°C</span>\r\n            </div>\r\n            <div className=\"info\">\r\n              <FontAwesomeIcon className=\"icon\" icon={faWind}></FontAwesomeIcon>\r\n              <p className=\"stat\">Wiatr</p>\r\n              <span>{wind}km/h</span>\r\n            </div>\r\n            <div className=\"info\">\r\n              <FontAwesomeIcon className=\"icon\" icon={faTint}></FontAwesomeIcon>\r\n              <p className=\"stat\">Wilgotność</p>\r\n              <span>{humidity}%</span>\r\n            </div>\r\n            <div className=\"info\">\r\n              <FontAwesomeIcon className=\"icon\" icon={faTachometerAlt}></FontAwesomeIcon>\r\n              <p className=\"stat\">Ciśnienie</p>\r\n              <span>{pressure} hPa</span>\r\n            </div>\r\n            <div className=\"info\">\r\n              <FontAwesomeIcon className=\"icon\" icon={faSun}></FontAwesomeIcon>\r\n              <p className=\"stat\">Wschód</p>\r\n              <span>{sunrise}</span>\r\n            </div>\r\n            <div className=\"info\">\r\n              <FontAwesomeIcon className=\"icon\" icon={faMoon}></FontAwesomeIcon>\r\n              <p className=\"stat\">Zachód</p>\r\n              <span>{sunset}</span>\r\n            </div>\r\n          </div>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdditionalInfo;","import React, {Component} from 'react';\nimport './App.css';\n\nimport SearchBox from './SearchBox';\nimport WeatherBox from './WeatherBox';\nimport AdditionalInfo from './AdditionalInfo';\n\n\n\nconst data = {\n  key: \"113a8dda29cb89a8ee722228a136271a\"\n}\n\nclass App extends Component {\n  state = {\n    value: \"\",\n    location: '',\n    country: '',\n    weather_description: '',\n    icon: '',\n    currentTemp: '',\n    realFeel: '',\n    maxTemp: '',\n    minTemp: '',\n    wind: '',\n    humidity: '',\n    pressure: '',\n    sunrise: '',\n    sunset: '',\n  }\n\n  getUnixTime = (time) => {\n    let converted = new Date(time * 1000);\n    let hours = converted.getHours();\n    let minutes = converted.getMinutes();\n    return `${hours}:${minutes}`;\n  }\n\n  startFunction = () => {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=Warsaw&units=metric&appid=${data.key}&lang=pl`)\n    .then(res => res.json())\n    .then(result => {\n      this.setState({\n        location: result.name,\n        country: result.sys.country,\n        weather_description: result.weather[0].description,\n        currentTemp: Math.round(result.main.temp),\n        realFeel: Math.round(result.main.feels_like),\n        minTemp: Math.round(result.main.temp_min),\n        maxTemp: Math.round(result.main.temp_max),\n        wind: Math.round(result.wind.speed),\n        humidity: Math.round(result.main.humidity),\n        pressure: result.main.pressure,\n        sunrise: result.sys.sunrise,\n        sunset: result.sys.sunset\n      })\n    })\n    .catch(error => console.log(error));\n}\n\n  getWeather = () => {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&units=metric&appid=${data.key}&lang=pl`)\n      .then(res => res.json())\n      .then(result => {\n        this.setState({\n          location: result.name,\n          country: result.sys.country,\n          weather_description: result.weather[0].description,\n          currentTemp: Math.round(result.main.temp),\n          minTemp: Math.round(result.main.temp_min),\n          maxTemp: Math.round(result.main.temp_max),\n          wind: Math.round(result.wind.speed),\n          realFeel: Math.round(result.main.feels_like),\n          humidity: Math.round(result.main.humidity),\n          pressure: result.main.pressure,\n          sunrise: result.sys.sunrise,\n          sunset: result.sys.sunset\n        })\n      })\n      .catch(error => console.log(error));\n  } \n\n  handleChange = (e) => {\n    this.setState({\n      value: e.target.value\n    })\n  }\n\n  dateBuilder = (d) => {\n    let days = [\"Niedziela\", \"Poniedziałek\", \"Wtorek\", \"Środa\", \"Czwartek\", \"Piątek\", \"Sobota\"];\n    let months = [\"Styczeń\", \"Luty\", \"Marzec\", \"Kwiecień\", \"Maj\", \"Czerwiec\", \"Lipiec\", \"Sierpień\", \"Wrzesień\", \"Październik\", \"Listopad\", \"Grudzień\"]\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day}, ${date} ${month} ${year}`;\n  }\n\n  componentDidMount() {\n    this.startFunction();\n  }\n\n  componentWillUnmount() {\n    console.log(\"Koniec\");\n  }\n\n  setClass = () => {\n    if(this.state.currentTemp <= 0) {\n      return 'app cold';\n    } else if(this.state.currentTemp > 0 && this.state.currentTemp <= 20) {\n      return 'app mid';\n    } else if(this.state.currentTemp > 20) {\n      return 'app warm';\n    }\n  }\n\n  render() { \n    return ( \n      <div className={this.setClass()}>\n      <main>\n        <SearchBox\n        change={this.handleChange}\n        value={this.state.value}\n        click={this.getWeather}\n        />\n          <>\n          <WeatherBox\n          weatherDesc={this.state.weather_description}\n          location={this.state.location}\n          country={this.state.country}\n          date={this.dateBuilder(new Date())}\n          currentTemp={this.state.currentTemp}\n          maxTemp={this.state.maxTemp}\n          minTemp={this.state.minTemp}\n          />\n          <AdditionalInfo\n          realFeel={this.state.realFeel}\n          wind={this.state.wind}\n          humidity={this.state.humidity}\n          pressure={this.state.pressure}\n          sunrise={this.getUnixTime(this.state.sunrise)}\n          sunset={this.getUnixTime(this.state.sunset)}\n          />\n        \n        </>        \n      </main> \n      </div>\n    );\n  }\n}\n \nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}